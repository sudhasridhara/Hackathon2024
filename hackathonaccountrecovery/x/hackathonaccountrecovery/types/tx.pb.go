// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hackathonaccountrecovery/hackathonaccountrecovery/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgAddAccountInfo struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Totalshares uint64 `protobuf:"varint,3,opt,name=totalshares,proto3" json:"totalshares,omitempty"`
	Minshares   uint64 `protobuf:"varint,4,opt,name=minshares,proto3" json:"minshares,omitempty"`
	EmailId     string `protobuf:"bytes,5,opt,name=emailId,proto3" json:"emailId,omitempty"`
}

func (m *MsgAddAccountInfo) Reset()         { *m = MsgAddAccountInfo{} }
func (m *MsgAddAccountInfo) String() string { return proto.CompactTextString(m) }
func (*MsgAddAccountInfo) ProtoMessage()    {}
func (*MsgAddAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{2}
}
func (m *MsgAddAccountInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAccountInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAccountInfo.Merge(m, src)
}
func (m *MsgAddAccountInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAccountInfo proto.InternalMessageInfo

func (m *MsgAddAccountInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddAccountInfo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgAddAccountInfo) GetTotalshares() uint64 {
	if m != nil {
		return m.Totalshares
	}
	return 0
}

func (m *MsgAddAccountInfo) GetMinshares() uint64 {
	if m != nil {
		return m.Minshares
	}
	return 0
}

func (m *MsgAddAccountInfo) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

type MsgAddAccountInfoResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgAddAccountInfoResponse) Reset()         { *m = MsgAddAccountInfoResponse{} }
func (m *MsgAddAccountInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAccountInfoResponse) ProtoMessage()    {}
func (*MsgAddAccountInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{3}
}
func (m *MsgAddAccountInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAccountInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAccountInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAccountInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAccountInfoResponse.Merge(m, src)
}
func (m *MsgAddAccountInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAccountInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAccountInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAccountInfoResponse proto.InternalMessageInfo

func (m *MsgAddAccountInfoResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatetotalshares struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Totalshares uint64 `protobuf:"varint,3,opt,name=totalshares,proto3" json:"totalshares,omitempty"`
	Minshares   uint64 `protobuf:"varint,4,opt,name=minshares,proto3" json:"minshares,omitempty"`
	Id          uint64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgUpdatetotalshares) Reset()         { *m = MsgUpdatetotalshares{} }
func (m *MsgUpdatetotalshares) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatetotalshares) ProtoMessage()    {}
func (*MsgUpdatetotalshares) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{4}
}
func (m *MsgUpdatetotalshares) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatetotalshares) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatetotalshares.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatetotalshares) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatetotalshares.Merge(m, src)
}
func (m *MsgUpdatetotalshares) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatetotalshares) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatetotalshares.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatetotalshares proto.InternalMessageInfo

func (m *MsgUpdatetotalshares) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatetotalshares) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgUpdatetotalshares) GetTotalshares() uint64 {
	if m != nil {
		return m.Totalshares
	}
	return 0
}

func (m *MsgUpdatetotalshares) GetMinshares() uint64 {
	if m != nil {
		return m.Minshares
	}
	return 0
}

func (m *MsgUpdatetotalshares) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatetotalsharesResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgUpdatetotalsharesResponse) Reset()         { *m = MsgUpdatetotalsharesResponse{} }
func (m *MsgUpdatetotalsharesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatetotalsharesResponse) ProtoMessage()    {}
func (*MsgUpdatetotalsharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{5}
}
func (m *MsgUpdatetotalsharesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatetotalsharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatetotalsharesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatetotalsharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatetotalsharesResponse.Merge(m, src)
}
func (m *MsgUpdatetotalsharesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatetotalsharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatetotalsharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatetotalsharesResponse proto.InternalMessageInfo

func (m *MsgUpdatetotalsharesResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgInitiateDeathValidation struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner     string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	DeathDate string `protobuf:"bytes,3,opt,name=deathDate,proto3" json:"deathDate,omitempty"`
	Id        uint64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgInitiateDeathValidation) Reset()         { *m = MsgInitiateDeathValidation{} }
func (m *MsgInitiateDeathValidation) String() string { return proto.CompactTextString(m) }
func (*MsgInitiateDeathValidation) ProtoMessage()    {}
func (*MsgInitiateDeathValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{6}
}
func (m *MsgInitiateDeathValidation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitiateDeathValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitiateDeathValidation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitiateDeathValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitiateDeathValidation.Merge(m, src)
}
func (m *MsgInitiateDeathValidation) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitiateDeathValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitiateDeathValidation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitiateDeathValidation proto.InternalMessageInfo

func (m *MsgInitiateDeathValidation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInitiateDeathValidation) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgInitiateDeathValidation) GetDeathDate() string {
	if m != nil {
		return m.DeathDate
	}
	return ""
}

func (m *MsgInitiateDeathValidation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgInitiateDeathValidationResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgInitiateDeathValidationResponse) Reset()         { *m = MsgInitiateDeathValidationResponse{} }
func (m *MsgInitiateDeathValidationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitiateDeathValidationResponse) ProtoMessage()    {}
func (*MsgInitiateDeathValidationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{7}
}
func (m *MsgInitiateDeathValidationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitiateDeathValidationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitiateDeathValidationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitiateDeathValidationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitiateDeathValidationResponse.Merge(m, src)
}
func (m *MsgInitiateDeathValidationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitiateDeathValidationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitiateDeathValidationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitiateDeathValidationResponse proto.InternalMessageInfo

func (m *MsgInitiateDeathValidationResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgValidateDeath struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Isvalidated bool   `protobuf:"varint,3,opt,name=isvalidated,proto3" json:"isvalidated,omitempty"`
	Id          uint64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgValidateDeath) Reset()         { *m = MsgValidateDeath{} }
func (m *MsgValidateDeath) String() string { return proto.CompactTextString(m) }
func (*MsgValidateDeath) ProtoMessage()    {}
func (*MsgValidateDeath) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{8}
}
func (m *MsgValidateDeath) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgValidateDeath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgValidateDeath.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgValidateDeath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgValidateDeath.Merge(m, src)
}
func (m *MsgValidateDeath) XXX_Size() int {
	return m.Size()
}
func (m *MsgValidateDeath) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgValidateDeath.DiscardUnknown(m)
}

var xxx_messageInfo_MsgValidateDeath proto.InternalMessageInfo

func (m *MsgValidateDeath) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgValidateDeath) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgValidateDeath) GetIsvalidated() bool {
	if m != nil {
		return m.Isvalidated
	}
	return false
}

func (m *MsgValidateDeath) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgValidateDeathResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgValidateDeathResponse) Reset()         { *m = MsgValidateDeathResponse{} }
func (m *MsgValidateDeathResponse) String() string { return proto.CompactTextString(m) }
func (*MsgValidateDeathResponse) ProtoMessage()    {}
func (*MsgValidateDeathResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{9}
}
func (m *MsgValidateDeathResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgValidateDeathResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgValidateDeathResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgValidateDeathResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgValidateDeathResponse.Merge(m, src)
}
func (m *MsgValidateDeathResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgValidateDeathResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgValidateDeathResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgValidateDeathResponse proto.InternalMessageInfo

func (m *MsgValidateDeathResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCreateMultisite struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Account   string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Id        uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Multisign string `protobuf:"bytes,4,opt,name=multisign,proto3" json:"multisign,omitempty"`
}

func (m *MsgCreateMultisite) Reset()         { *m = MsgCreateMultisite{} }
func (m *MsgCreateMultisite) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMultisite) ProtoMessage()    {}
func (*MsgCreateMultisite) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{10}
}
func (m *MsgCreateMultisite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMultisite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMultisite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMultisite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMultisite.Merge(m, src)
}
func (m *MsgCreateMultisite) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMultisite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMultisite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMultisite proto.InternalMessageInfo

func (m *MsgCreateMultisite) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMultisite) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgCreateMultisite) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreateMultisite) GetMultisign() string {
	if m != nil {
		return m.Multisign
	}
	return ""
}

type MsgCreateMultisiteResponse struct {
}

func (m *MsgCreateMultisiteResponse) Reset()         { *m = MsgCreateMultisiteResponse{} }
func (m *MsgCreateMultisiteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMultisiteResponse) ProtoMessage()    {}
func (*MsgCreateMultisiteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{11}
}
func (m *MsgCreateMultisiteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMultisiteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMultisiteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMultisiteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMultisiteResponse.Merge(m, src)
}
func (m *MsgCreateMultisiteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMultisiteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMultisiteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMultisiteResponse proto.InternalMessageInfo

type MsgUpdateMultisite struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Account           string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Id                uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	MultisignAddress  string `protobuf:"bytes,4,opt,name=multisignAddress,proto3" json:"multisignAddress,omitempty"`
	MultisignShareKey string `protobuf:"bytes,5,opt,name=multisignShareKey,proto3" json:"multisignShareKey,omitempty"`
}

func (m *MsgUpdateMultisite) Reset()         { *m = MsgUpdateMultisite{} }
func (m *MsgUpdateMultisite) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMultisite) ProtoMessage()    {}
func (*MsgUpdateMultisite) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{12}
}
func (m *MsgUpdateMultisite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMultisite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMultisite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMultisite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMultisite.Merge(m, src)
}
func (m *MsgUpdateMultisite) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMultisite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMultisite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMultisite proto.InternalMessageInfo

func (m *MsgUpdateMultisite) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMultisite) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgUpdateMultisite) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateMultisite) GetMultisignAddress() string {
	if m != nil {
		return m.MultisignAddress
	}
	return ""
}

func (m *MsgUpdateMultisite) GetMultisignShareKey() string {
	if m != nil {
		return m.MultisignShareKey
	}
	return ""
}

type MsgUpdateMultisiteResponse struct {
}

func (m *MsgUpdateMultisiteResponse) Reset()         { *m = MsgUpdateMultisiteResponse{} }
func (m *MsgUpdateMultisiteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMultisiteResponse) ProtoMessage()    {}
func (*MsgUpdateMultisiteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{13}
}
func (m *MsgUpdateMultisiteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMultisiteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMultisiteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMultisiteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMultisiteResponse.Merge(m, src)
}
func (m *MsgUpdateMultisiteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMultisiteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMultisiteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMultisiteResponse proto.InternalMessageInfo

type MsgUpdateEmailId struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Emailid string `protobuf:"bytes,3,opt,name=emailid,proto3" json:"emailid,omitempty"`
}

func (m *MsgUpdateEmailId) Reset()         { *m = MsgUpdateEmailId{} }
func (m *MsgUpdateEmailId) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEmailId) ProtoMessage()    {}
func (*MsgUpdateEmailId) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{14}
}
func (m *MsgUpdateEmailId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEmailId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEmailId.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEmailId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEmailId.Merge(m, src)
}
func (m *MsgUpdateEmailId) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEmailId) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEmailId.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEmailId proto.InternalMessageInfo

func (m *MsgUpdateEmailId) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateEmailId) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgUpdateEmailId) GetEmailid() string {
	if m != nil {
		return m.Emailid
	}
	return ""
}

type MsgUpdateEmailIdResponse struct {
}

func (m *MsgUpdateEmailIdResponse) Reset()         { *m = MsgUpdateEmailIdResponse{} }
func (m *MsgUpdateEmailIdResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEmailIdResponse) ProtoMessage()    {}
func (*MsgUpdateEmailIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65783a94545b2504, []int{15}
}
func (m *MsgUpdateEmailIdResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEmailIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEmailIdResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEmailIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEmailIdResponse.Merge(m, src)
}
func (m *MsgUpdateEmailIdResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEmailIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEmailIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEmailIdResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgAddAccountInfo)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgAddAccountInfo")
	proto.RegisterType((*MsgAddAccountInfoResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgAddAccountInfoResponse")
	proto.RegisterType((*MsgUpdatetotalshares)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdatetotalshares")
	proto.RegisterType((*MsgUpdatetotalsharesResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdatetotalsharesResponse")
	proto.RegisterType((*MsgInitiateDeathValidation)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgInitiateDeathValidation")
	proto.RegisterType((*MsgInitiateDeathValidationResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgInitiateDeathValidationResponse")
	proto.RegisterType((*MsgValidateDeath)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgValidateDeath")
	proto.RegisterType((*MsgValidateDeathResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgValidateDeathResponse")
	proto.RegisterType((*MsgCreateMultisite)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgCreateMultisite")
	proto.RegisterType((*MsgCreateMultisiteResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgCreateMultisiteResponse")
	proto.RegisterType((*MsgUpdateMultisite)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdateMultisite")
	proto.RegisterType((*MsgUpdateMultisiteResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdateMultisiteResponse")
	proto.RegisterType((*MsgUpdateEmailId)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdateEmailId")
	proto.RegisterType((*MsgUpdateEmailIdResponse)(nil), "hackathonaccountrecovery.hackathonaccountrecovery.MsgUpdateEmailIdResponse")
}

func init() {
	proto.RegisterFile("hackathonaccountrecovery/hackathonaccountrecovery/tx.proto", fileDescriptor_65783a94545b2504)
}

var fileDescriptor_65783a94545b2504 = []byte{
	// 823 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x97, 0xc1, 0x6b, 0x13, 0x4f,
	0x14, 0xc7, 0x33, 0x6d, 0xd2, 0xfe, 0x76, 0xda, 0x5f, 0xdb, 0x2c, 0x81, 0x6e, 0x97, 0x10, 0x43,
	0x4e, 0x25, 0x6a, 0x42, 0xab, 0x08, 0xed, 0x41, 0x68, 0xd2, 0x22, 0xb5, 0x2e, 0xca, 0x96, 0xf6,
	0x20, 0x82, 0x8c, 0xd9, 0x71, 0xb3, 0x98, 0xec, 0x84, 0x9d, 0x69, 0x6d, 0x6e, 0x52, 0x3c, 0x88,
	0x27, 0xff, 0x02, 0x41, 0x28, 0x28, 0x88, 0xd0, 0x83, 0x77, 0x3d, 0xf6, 0x58, 0x3c, 0x79, 0x12,
	0x49, 0x0f, 0xfd, 0x33, 0x94, 0xdd, 0x99, 0xdd, 0x24, 0x9b, 0xae, 0xd2, 0x4d, 0xf0, 0xd2, 0x76,
	0xde, 0xdb, 0xfd, 0xbe, 0xcf, 0x77, 0xe6, 0xed, 0xdb, 0x2d, 0x5c, 0xad, 0xa3, 0xda, 0x33, 0xc4,
	0xea, 0xc4, 0x46, 0xb5, 0x1a, 0xd9, 0xb3, 0x99, 0x83, 0x6b, 0x64, 0x1f, 0x3b, 0xed, 0x72, 0x64,
	0x82, 0x1d, 0x94, 0x5a, 0x0e, 0x61, 0x44, 0x5e, 0x8a, 0xba, 0xa4, 0x14, 0x95, 0x50, 0xd3, 0xa8,
	0x69, 0xd9, 0xa4, 0xec, 0xfd, 0xe4, 0x2a, 0xea, 0x7c, 0x8d, 0xd0, 0x26, 0xa1, 0xe5, 0x26, 0x35,
	0xcb, 0xfb, 0x4b, 0xee, 0x2f, 0x91, 0x58, 0xe0, 0x89, 0xc7, 0xde, 0xaa, 0xcc, 0x17, 0x22, 0x95,
	0x31, 0x89, 0x49, 0x78, 0xdc, 0xfd, 0x4b, 0x44, 0x6f, 0x5f, 0xde, 0x4b, 0x0b, 0x39, 0xa8, 0x29,
	0x54, 0x0b, 0xbf, 0x00, 0x9c, 0xd5, 0xa8, 0xb9, 0xd3, 0x32, 0x10, 0xc3, 0x0f, 0xbc, 0x8c, 0x7c,
	0x0b, 0x4a, 0x68, 0x8f, 0xd5, 0x89, 0x63, 0xb1, 0xb6, 0x02, 0xf2, 0x60, 0x51, 0xaa, 0x28, 0xdf,
	0x3e, 0x5f, 0xcf, 0x08, 0x9c, 0x35, 0xc3, 0x70, 0x30, 0xa5, 0xdb, 0xcc, 0xb1, 0x6c, 0x53, 0xef,
	0x5e, 0x2a, 0x3f, 0x82, 0x13, 0x5c, 0x5b, 0x19, 0xcb, 0x83, 0xc5, 0xa9, 0xe5, 0x95, 0xd2, 0xa5,
	0x37, 0xab, 0xc4, 0x11, 0x2a, 0xd2, 0xc9, 0x8f, 0x2b, 0x89, 0x0f, 0xe7, 0xc7, 0x45, 0xa0, 0x0b,
	0xcd, 0xd5, 0xdd, 0xc3, 0xf3, 0xe3, 0x62, 0xb7, 0xda, 0xeb, 0xf3, 0xe3, 0x62, 0x35, 0xd2, 0xe3,
	0x41, 0xb4, 0xfd, 0x90, 0xdb, 0xc2, 0x02, 0x9c, 0x0f, 0x85, 0x74, 0x4c, 0x5b, 0xc4, 0xa6, 0xb8,
	0xf0, 0x11, 0xc0, 0xb4, 0x46, 0xcd, 0x35, 0xc3, 0x58, 0xe3, 0x22, 0x9b, 0xf6, 0x53, 0x22, 0x2b,
	0x70, 0xb2, 0xe6, 0x60, 0xc4, 0x88, 0xc3, 0x37, 0x47, 0xf7, 0x97, 0x72, 0x06, 0xa6, 0xc8, 0x73,
	0x1b, 0x3b, 0x9e, 0x7f, 0x49, 0xe7, 0x0b, 0x39, 0x0f, 0xa7, 0x18, 0x61, 0xa8, 0x41, 0xeb, 0xc8,
	0xc1, 0x54, 0x19, 0xcf, 0x83, 0xc5, 0xa4, 0xde, 0x1b, 0x92, 0xb3, 0x50, 0x6a, 0x5a, 0xb6, 0xc8,
	0x27, 0xbd, 0x7c, 0x37, 0xe0, 0xd6, 0xc3, 0x4d, 0x64, 0x35, 0x36, 0x0d, 0x25, 0xc5, 0xeb, 0x89,
	0xe5, 0xea, 0xb4, 0xbb, 0x25, 0x7e, 0xf5, 0xc2, 0x55, 0xb8, 0x30, 0x00, 0xeb, 0x5b, 0x91, 0x67,
	0xe0, 0x98, 0x65, 0x78, 0xbc, 0x49, 0x7d, 0xcc, 0x32, 0x0a, 0x47, 0x00, 0x66, 0x02, 0xdb, 0xbd,
	0x2c, 0xff, 0xda, 0x1d, 0x07, 0x4b, 0xf9, 0x60, 0x21, 0x4f, 0x25, 0x98, 0xbd, 0x88, 0x32, 0xd2,
	0xd6, 0x2b, 0x00, 0x55, 0x8d, 0x9a, 0x9b, 0xb6, 0xc5, 0x2c, 0xc4, 0xf0, 0x3a, 0x46, 0xac, 0xbe,
	0x8b, 0x1a, 0x96, 0x81, 0x98, 0x45, 0xec, 0x4b, 0x9b, 0xcb, 0x42, 0xc9, 0x70, 0x25, 0xd6, 0x11,
	0xc3, 0x9e, 0x35, 0x49, 0xef, 0x06, 0x44, 0xf1, 0x64, 0x04, 0xfa, 0x4d, 0x58, 0x88, 0x26, 0x89,
	0x34, 0x70, 0x08, 0xe0, 0x9c, 0x46, 0x4d, 0x71, 0x25, 0xbf, 0x2d, 0xce, 0x99, 0x58, 0x74, 0x5f,
	0x48, 0x18, 0x1e, 0xf8, 0x7f, 0x7a, 0x6f, 0xe8, 0x2f, 0xe8, 0x45, 0xa8, 0x84, 0x19, 0x22, 0x81,
	0x5f, 0x02, 0x28, 0x6b, 0xd4, 0xac, 0xba, 0xb7, 0x62, 0x6d, 0xaf, 0xc1, 0x2c, 0x6a, 0x31, 0xfc,
	0x07, 0x64, 0x05, 0x4e, 0x8a, 0x47, 0x52, 0x40, 0xfb, 0x4b, 0x21, 0x3d, 0xee, 0x4b, 0x7b, 0x8d,
	0xc3, 0x05, 0x4d, 0xdb, 0x63, 0x95, 0xf4, 0x6e, 0x20, 0x84, 0x9c, 0xf5, 0xce, 0x3d, 0x44, 0x11,
	0x3c, 0xc8, 0x5f, 0x39, 0x24, 0xef, 0xa3, 0xd1, 0x42, 0x16, 0xe1, 0x5c, 0xc0, 0x24, 0x26, 0xa3,
	0x60, 0x1d, 0x88, 0xcb, 0xd7, 0x60, 0x3a, 0x88, 0x6d, 0xbb, 0x8d, 0xbc, 0x85, 0xdb, 0xe2, 0x99,
	0x1e, 0x4c, 0x5c, 0x68, 0x30, 0xe4, 0x20, 0x30, 0x68, 0x7b, 0x5d, 0xc3, 0xb3, 0x1b, 0x7c, 0x3a,
	0xc4, 0x72, 0xe7, 0xcf, 0x1a, 0x61, 0xd1, 0x9f, 0x35, 0x03, 0x1d, 0xa2, 0x7a, 0x1d, 0xd2, 0x57,
	0xcf, 0x67, 0x59, 0xee, 0x40, 0x38, 0xae, 0x51, 0x53, 0x7e, 0x0b, 0xe0, 0x74, 0xdf, 0x7b, 0xa5,
	0x12, 0xe3, 0x7d, 0x10, 0x1a, 0xcd, 0xea, 0xdd, 0xe1, 0x35, 0x82, 0x56, 0x3e, 0x02, 0x70, 0x26,
	0x34, 0xdb, 0xd7, 0xe3, 0xc9, 0xf7, 0xab, 0xa8, 0xf7, 0x46, 0xa1, 0x12, 0x60, 0x7e, 0x02, 0x30,
	0x3d, 0x38, 0xa7, 0xef, 0x0c, 0xb3, 0x11, 0x3d, 0x42, 0xea, 0xfd, 0x11, 0x09, 0x05, 0xbc, 0x5f,
	0x00, 0x9c, 0x8f, 0x1a, 0xc0, 0x5a, 0xbc, 0x62, 0x11, 0x72, 0xea, 0xce, 0x48, 0xe5, 0x02, 0x07,
	0xef, 0x00, 0xfc, 0xbf, 0x7f, 0x02, 0x57, 0xe3, 0x15, 0xea, 0x13, 0x51, 0xb7, 0x46, 0x20, 0x12,
	0x30, 0xbe, 0x07, 0x70, 0x36, 0x3c, 0x74, 0x37, 0xe2, 0x15, 0x08, 0xc9, 0xa8, 0xda, 0x48, 0x64,
	0xfa, 0x48, 0xc3, 0x93, 0x77, 0x63, 0x98, 0xa6, 0x1b, 0x9a, 0x34, 0x62, 0x8a, 0x7a, 0xe7, 0xde,
	0x3f, 0x43, 0xab, 0xc3, 0x14, 0x10, 0x22, 0x71, 0xcf, 0xfd, 0xc2, 0xe9, 0xaa, 0xa6, 0x5e, 0xb8,
	0x5f, 0xc5, 0x95, 0xed, 0x93, 0x4e, 0x0e, 0x9c, 0x76, 0x72, 0xe0, 0x67, 0x27, 0x07, 0xde, 0x9c,
	0xe5, 0x12, 0xa7, 0x67, 0xb9, 0xc4, 0xf7, 0xb3, 0x5c, 0xe2, 0xe1, 0x4a, 0x9c, 0x8f, 0x62, 0xd6,
	0x6e, 0x61, 0xfa, 0x64, 0xc2, 0xfb, 0x9f, 0xe0, 0xc6, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9,
	0xc6, 0xd9, 0xe6, 0x21, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	AddAccountInfo(ctx context.Context, in *MsgAddAccountInfo, opts ...grpc.CallOption) (*MsgAddAccountInfoResponse, error)
	Updatetotalshares(ctx context.Context, in *MsgUpdatetotalshares, opts ...grpc.CallOption) (*MsgUpdatetotalsharesResponse, error)
	InitiateDeathValidation(ctx context.Context, in *MsgInitiateDeathValidation, opts ...grpc.CallOption) (*MsgInitiateDeathValidationResponse, error)
	ValidateDeath(ctx context.Context, in *MsgValidateDeath, opts ...grpc.CallOption) (*MsgValidateDeathResponse, error)
	CreateMultisite(ctx context.Context, in *MsgCreateMultisite, opts ...grpc.CallOption) (*MsgCreateMultisiteResponse, error)
	UpdateMultisite(ctx context.Context, in *MsgUpdateMultisite, opts ...grpc.CallOption) (*MsgUpdateMultisiteResponse, error)
	UpdateEmailId(ctx context.Context, in *MsgUpdateEmailId, opts ...grpc.CallOption) (*MsgUpdateEmailIdResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddAccountInfo(ctx context.Context, in *MsgAddAccountInfo, opts ...grpc.CallOption) (*MsgAddAccountInfoResponse, error) {
	out := new(MsgAddAccountInfoResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/AddAccountInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Updatetotalshares(ctx context.Context, in *MsgUpdatetotalshares, opts ...grpc.CallOption) (*MsgUpdatetotalsharesResponse, error) {
	out := new(MsgUpdatetotalsharesResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/Updatetotalshares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InitiateDeathValidation(ctx context.Context, in *MsgInitiateDeathValidation, opts ...grpc.CallOption) (*MsgInitiateDeathValidationResponse, error) {
	out := new(MsgInitiateDeathValidationResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/InitiateDeathValidation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ValidateDeath(ctx context.Context, in *MsgValidateDeath, opts ...grpc.CallOption) (*MsgValidateDeathResponse, error) {
	out := new(MsgValidateDeathResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/ValidateDeath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMultisite(ctx context.Context, in *MsgCreateMultisite, opts ...grpc.CallOption) (*MsgCreateMultisiteResponse, error) {
	out := new(MsgCreateMultisiteResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/CreateMultisite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMultisite(ctx context.Context, in *MsgUpdateMultisite, opts ...grpc.CallOption) (*MsgUpdateMultisiteResponse, error) {
	out := new(MsgUpdateMultisiteResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/UpdateMultisite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEmailId(ctx context.Context, in *MsgUpdateEmailId, opts ...grpc.CallOption) (*MsgUpdateEmailIdResponse, error) {
	out := new(MsgUpdateEmailIdResponse)
	err := c.cc.Invoke(ctx, "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/UpdateEmailId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	AddAccountInfo(context.Context, *MsgAddAccountInfo) (*MsgAddAccountInfoResponse, error)
	Updatetotalshares(context.Context, *MsgUpdatetotalshares) (*MsgUpdatetotalsharesResponse, error)
	InitiateDeathValidation(context.Context, *MsgInitiateDeathValidation) (*MsgInitiateDeathValidationResponse, error)
	ValidateDeath(context.Context, *MsgValidateDeath) (*MsgValidateDeathResponse, error)
	CreateMultisite(context.Context, *MsgCreateMultisite) (*MsgCreateMultisiteResponse, error)
	UpdateMultisite(context.Context, *MsgUpdateMultisite) (*MsgUpdateMultisiteResponse, error)
	UpdateEmailId(context.Context, *MsgUpdateEmailId) (*MsgUpdateEmailIdResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) AddAccountInfo(ctx context.Context, req *MsgAddAccountInfo) (*MsgAddAccountInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAccountInfo not implemented")
}
func (*UnimplementedMsgServer) Updatetotalshares(ctx context.Context, req *MsgUpdatetotalshares) (*MsgUpdatetotalsharesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Updatetotalshares not implemented")
}
func (*UnimplementedMsgServer) InitiateDeathValidation(ctx context.Context, req *MsgInitiateDeathValidation) (*MsgInitiateDeathValidationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitiateDeathValidation not implemented")
}
func (*UnimplementedMsgServer) ValidateDeath(ctx context.Context, req *MsgValidateDeath) (*MsgValidateDeathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateDeath not implemented")
}
func (*UnimplementedMsgServer) CreateMultisite(ctx context.Context, req *MsgCreateMultisite) (*MsgCreateMultisiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMultisite not implemented")
}
func (*UnimplementedMsgServer) UpdateMultisite(ctx context.Context, req *MsgUpdateMultisite) (*MsgUpdateMultisiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMultisite not implemented")
}
func (*UnimplementedMsgServer) UpdateEmailId(ctx context.Context, req *MsgUpdateEmailId) (*MsgUpdateEmailIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEmailId not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddAccountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAccountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAccountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/AddAccountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAccountInfo(ctx, req.(*MsgAddAccountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Updatetotalshares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatetotalshares)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Updatetotalshares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/Updatetotalshares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Updatetotalshares(ctx, req.(*MsgUpdatetotalshares))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InitiateDeathValidation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitiateDeathValidation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitiateDeathValidation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/InitiateDeathValidation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitiateDeathValidation(ctx, req.(*MsgInitiateDeathValidation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ValidateDeath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgValidateDeath)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ValidateDeath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/ValidateDeath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ValidateDeath(ctx, req.(*MsgValidateDeath))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMultisite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMultisite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMultisite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/CreateMultisite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMultisite(ctx, req.(*MsgCreateMultisite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMultisite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMultisite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMultisite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/UpdateMultisite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMultisite(ctx, req.(*MsgUpdateMultisite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEmailId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEmailId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEmailId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hackathonaccountrecovery.hackathonaccountrecovery.Msg/UpdateEmailId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEmailId(ctx, req.(*MsgUpdateEmailId))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hackathonaccountrecovery.hackathonaccountrecovery.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "AddAccountInfo",
			Handler:    _Msg_AddAccountInfo_Handler,
		},
		{
			MethodName: "Updatetotalshares",
			Handler:    _Msg_Updatetotalshares_Handler,
		},
		{
			MethodName: "InitiateDeathValidation",
			Handler:    _Msg_InitiateDeathValidation_Handler,
		},
		{
			MethodName: "ValidateDeath",
			Handler:    _Msg_ValidateDeath_Handler,
		},
		{
			MethodName: "CreateMultisite",
			Handler:    _Msg_CreateMultisite_Handler,
		},
		{
			MethodName: "UpdateMultisite",
			Handler:    _Msg_UpdateMultisite_Handler,
		},
		{
			MethodName: "UpdateEmailId",
			Handler:    _Msg_UpdateEmailId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hackathonaccountrecovery/hackathonaccountrecovery/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddAccountInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAccountInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAccountInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EmailId) > 0 {
		i -= len(m.EmailId)
		copy(dAtA[i:], m.EmailId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EmailId)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Minshares != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Minshares))
		i--
		dAtA[i] = 0x20
	}
	if m.Totalshares != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Totalshares))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAccountInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAccountInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAccountInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatetotalshares) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatetotalshares) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatetotalshares) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x28
	}
	if m.Minshares != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Minshares))
		i--
		dAtA[i] = 0x20
	}
	if m.Totalshares != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Totalshares))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatetotalsharesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatetotalsharesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatetotalsharesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitiateDeathValidation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitiateDeathValidation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitiateDeathValidation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if len(m.DeathDate) > 0 {
		i -= len(m.DeathDate)
		copy(dAtA[i:], m.DeathDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DeathDate)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitiateDeathValidationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitiateDeathValidationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitiateDeathValidationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgValidateDeath) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgValidateDeath) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgValidateDeath) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Isvalidated {
		i--
		if m.Isvalidated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgValidateDeathResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgValidateDeathResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgValidateDeathResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMultisite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMultisite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMultisite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Multisign) > 0 {
		i -= len(m.Multisign)
		copy(dAtA[i:], m.Multisign)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Multisign)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMultisiteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMultisiteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMultisiteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMultisite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMultisite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMultisite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MultisignShareKey) > 0 {
		i -= len(m.MultisignShareKey)
		copy(dAtA[i:], m.MultisignShareKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MultisignShareKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.MultisignAddress) > 0 {
		i -= len(m.MultisignAddress)
		copy(dAtA[i:], m.MultisignAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MultisignAddress)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMultisiteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMultisiteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMultisiteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEmailId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEmailId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEmailId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Emailid) > 0 {
		i -= len(m.Emailid)
		copy(dAtA[i:], m.Emailid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Emailid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEmailIdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEmailIdResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEmailIdResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddAccountInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Totalshares != 0 {
		n += 1 + sovTx(uint64(m.Totalshares))
	}
	if m.Minshares != 0 {
		n += 1 + sovTx(uint64(m.Minshares))
	}
	l = len(m.EmailId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddAccountInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatetotalshares) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Totalshares != 0 {
		n += 1 + sovTx(uint64(m.Totalshares))
	}
	if m.Minshares != 0 {
		n += 1 + sovTx(uint64(m.Minshares))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatetotalsharesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgInitiateDeathValidation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DeathDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgInitiateDeathValidationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgValidateDeath) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Isvalidated {
		n += 2
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgValidateDeathResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCreateMultisite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Multisign)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMultisiteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMultisite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.MultisignAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MultisignShareKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMultisiteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateEmailId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Emailid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEmailIdResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAccountInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAccountInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAccountInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Totalshares", wireType)
			}
			m.Totalshares = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Totalshares |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minshares", wireType)
			}
			m.Minshares = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Minshares |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAccountInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAccountInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAccountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatetotalshares) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatetotalshares: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatetotalshares: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Totalshares", wireType)
			}
			m.Totalshares = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Totalshares |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minshares", wireType)
			}
			m.Minshares = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Minshares |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatetotalsharesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatetotalsharesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatetotalsharesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitiateDeathValidation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitiateDeathValidation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitiateDeathValidation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeathDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeathDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitiateDeathValidationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitiateDeathValidationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitiateDeathValidationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgValidateDeath) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgValidateDeath: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgValidateDeath: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Isvalidated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Isvalidated = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgValidateDeathResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgValidateDeathResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgValidateDeathResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMultisite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMultisite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMultisite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Multisign", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Multisign = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMultisiteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMultisiteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMultisiteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMultisite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMultisite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMultisite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultisignAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultisignAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultisignShareKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultisignShareKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMultisiteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMultisiteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMultisiteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEmailId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEmailId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEmailId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emailid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emailid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEmailIdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEmailIdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEmailIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
